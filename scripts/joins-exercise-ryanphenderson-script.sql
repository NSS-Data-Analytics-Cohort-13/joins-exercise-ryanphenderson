-- 1. Give the name, release year, and worldwide gross of the lowest grossing movie.
-- SELECT specs.film_title
-- 	,	specs.release_year
-- 	,	revenue.worldwide_gross
-- FROM specs
-- 	INNER JOIN revenue
-- 		USING(movie_id)
-- ORDER BY revenue.worldwide_gross
-- LIMIT 1;
-- Answer: "Semi-Tough" release in 1977 and grossed 37,187,139 worldwide.

-- 2. What year has the highest average imdb rating?
-- SELECT specs.release_year
-- 	,	AVG(rating.imdb_rating) AS avg_imdb_rating
-- FROM specs
-- 	INNER JOIN rating
-- 		USING(movie_id)
-- GROUP BY specs.release_year
-- ORDER BY avg_imdb_rating DESC
-- LIMIT 1;
-- Answer: 1991

-- 3. What is the highest grossing G-rated movie? Which company distributed it?
-- SELECT specs.film_title
-- 	,	distributors.company_name
-- 	,	revenue.worldwide_gross
-- FROM specs
-- 	INNER JOIN distributors
-- 		ON specs.domestic_distributor_id=distributors.distributor_id
-- 	INNER JOIN revenue
-- 		USING (movie_id)
-- WHERE specs.mpaa_rating = 'G'
-- ORDER BY revenue.worldwide_gross DESC
-- LIMIT 1;
-- Answer: Toy Story 4, distributed by Walt Disney

-- 4. Write a query that returns, for each distributor in the distributors table, the distributor name and the number of movies associated with that distributor in the movies 
-- table. Your result set should include all of the distributors, whether or not they have any movies in the movies table.
-- SELECT distributors.company_name
-- 	, 	COUNT(DISTINCT specs.film_title) as num_films
-- FROM distributors
-- 	LEFT JOIN specs
-- 		ON distributors.distributor_id=specs.domestic_distributor_id
-- GROUP BY distributors.company_name
-- ORDER BY num_films DESC;

-- 5. Write a query that returns the five distributors with the highest average movie budget.
-- SELECT distributors.company_name
-- 	, 	AVG(film_budget) AS avg_budget
-- FROM distributors
-- 	INNER JOIN specs
-- 		ON distributors.distributor_id=specs.domestic_distributor_id
-- 	INNER JOIN revenue
-- 		USING (movie_id)
-- GROUP BY distributors.company_name
-- ORDER BY avg_budget DESC
-- LIMIT 5;

-- 6. How many movies in the dataset are distributed by a company which is not headquartered in California? Which of these movies has the highest imdb rating?
-- SELECT specs.film_title
-- 	, 	MAX(rating.imdb_rating) AS max_rating
-- FROM distributors
-- 	INNER JOIN specs
-- 		ON distributors.distributor_id=specs.domestic_distributor_id
-- 	INNER JOIN rating
-- 		USING(movie_id)
-- WHERE distributors.headquarters NOT ILIKE '%, CA%'
-- GROUP BY specs.film_title
-- ORDER BY max_rating DESC;
-- Answer: 2 movies, with Dirty Dancing having the higher rating of 7.0.

-- 7. Which have a higher average rating, movies which are over two hours long or movies which are under two hours?
-- SELECT '>2 hr' AS length_in_hr
-- 	, 	COUNT(specs.length_in_min) AS total_movies
-- 	, 	ROUND(AVG(rating.imdb_rating), 2) AS avg_rating
-- FROM specs
-- 	JOIN rating
-- 		USING (movie_id)
-- WHERE length_in_min > 120
-- UNION
-- SELECT '<=2 hr' AS length_in_hr
-- 	, 	COUNT(specs.length_in_min) AS total_movies
-- 	, 	ROUND(AVG(rating.imdb_rating), 2) AS avg_rating
-- FROM specs
-- 	JOIN rating
-- 		USING(movie_id)
-- WHERE length_in_min <= 120
-- ORDER BY avg_rating DESC;
-- Answer: Movies over 2 hours have a higher average rating, despite less movies.
